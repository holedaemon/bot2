// Code generated by qtc from "profile.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

package templates

import (
	"github.com/holedaemon/bot2/internal/db/models"
	"strings"
)

import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

type ProfilePage struct {
	BasePage
	Profile *models.UserProfile
}

func streampossess(qw422016 *qt422016.Writer, s string) {
	qw422016.N().S(`
    `)
	if strings.HasSuffix(s, "s") {
		qw422016.N().S(`
        `)
		qw422016.E().S(s)
		qw422016.N().S(`'
    `)
	} else {
		qw422016.N().S(`
        `)
		qw422016.E().S(s)
		qw422016.N().S(`'s
    `)
	}
	qw422016.N().S(`
`)
}

func writepossess(qq422016 qtio422016.Writer, s string) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	streampossess(qw422016, s)
	qt422016.ReleaseWriter(qw422016)
}

func possess(s string) string {
	qb422016 := qt422016.AcquireByteBuffer()
	writepossess(qb422016, s)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}

func (p *ProfilePage) StreamTitle(qw422016 *qt422016.Writer) {
	streampossess(qw422016, p.Username)
	qw422016.N().S(` Profile`)
}

func (p *ProfilePage) WriteTitle(qq422016 qtio422016.Writer) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	p.StreamTitle(qw422016)
	qt422016.ReleaseWriter(qw422016)
}

func (p *ProfilePage) Title() string {
	qb422016 := qt422016.AcquireByteBuffer()
	p.WriteTitle(qb422016)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}

func (p *ProfilePage) StreamBody(qw422016 *qt422016.Writer) {
	qw422016.N().S(`
    <section class="section">
        <div class="container">
            <h1 class="title">`)
	streampossess(qw422016, p.Username)
	qw422016.N().S(` profile</h1>
            <hr>
            <ul>
                <li><p class="is-size-4">User ID: `)
	qw422016.E().S(p.Profile.UserID)
	qw422016.N().S(`</p></li>
                `)
	if p.Profile.Timezone.Valid {
		qw422016.N().S(`
                    <li><p class="is-size-4">Timezone: <code>`)
		qw422016.E().S(p.Profile.Timezone.String)
		qw422016.N().S(`</code></p></li>
                `)
	} else {
		qw422016.N().S(`
                    <li>Timezone: not set</li>
                `)
	}
	qw422016.N().S(`
            </ul>
        </div>
    </section>
`)
}

func (p *ProfilePage) WriteBody(qq422016 qtio422016.Writer) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	p.StreamBody(qw422016)
	qt422016.ReleaseWriter(qw422016)
}

func (p *ProfilePage) Body() string {
	qb422016 := qt422016.AcquireByteBuffer()
	p.WriteBody(qb422016)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}
