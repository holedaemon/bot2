// Code generated by qtc from "error.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

package templates

import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

type ErrorPage struct {
	BasePage
	ErrorHead string
	ErrorText string
}

func (p *ErrorPage) StreamTitle(qw422016 *qt422016.Writer) {
	qw422016.N().S(`Uh oh`)
}

func (p *ErrorPage) WriteTitle(qq422016 qtio422016.Writer) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	p.StreamTitle(qw422016)
	qt422016.ReleaseWriter(qw422016)
}

func (p *ErrorPage) Title() string {
	qb422016 := qt422016.AcquireByteBuffer()
	p.WriteTitle(qb422016)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}

func (p *ErrorPage) StreamBody(qw422016 *qt422016.Writer) {
	qw422016.N().S(`
    <section class="section">
        <div class="container has-text-centered">
            <h1 class="title">`)
	qw422016.E().S(p.ErrorHead)
	qw422016.N().S(`</h1>
            `)
	if p.ErrorText != "" {
		qw422016.N().S(`
                <h2 class="subtitle">`)
		qw422016.E().S(p.ErrorText)
		qw422016.N().S(`</h2>
            `)
	}
	qw422016.N().S(`
            <a href="/" class="button is-success">Home</a>
        </div>
  </section>
`)
}

func (p *ErrorPage) WriteBody(qq422016 qtio422016.Writer) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	p.StreamBody(qw422016)
	qt422016.ReleaseWriter(qw422016)
}

func (p *ErrorPage) Body() string {
	qb422016 := qt422016.AcquireByteBuffer()
	p.WriteBody(qb422016)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}
